from github import Github
from datetime import datetime, timedelta

# Replace 'your_personal_access_token' with your GitHub personal access token
access_token = 'token'

# Replace with the GitHub account owner's username
repo_owner = 'shekharshamra'

# Initialize the GitHub API client
g = Github(access_token)

# Define the age limit for branches (5 days)
age_limit = timedelta(days=15)

# Function to remove branches older than a specified age, except 'master'
def remove_old_branches(repo):
    branches = repo.get_branches()
    branches_deleted = False  # Flag to track if any branches were deleted
    for branch in branches:
        # Skip 'master' branch
        if branch.name == 'master':
            continue

        last_commit = branch.commit.commit.author.date
        branch_age = datetime.now() - last_commit
        if branch_age > age_limit:
            print(f"Deleting branch '{branch.name}' in repository '{repo.full_name}' (last commit: {last_commit})")
            try:
                repo.get_git_ref(f"heads/{branch.name}").delete()
                branches_deleted = True  # Set the flag to True if a branch was deleted
            except Exception as e:
                print(f"Error deleting branch '{branch.name}': {str(e)}")

    # Print a message if no branches were deleted
    if not branches_deleted:
        print(f"No branches older than {age_limit} found in repository '{repo.full_name}'.")

# Get all repositories for the specified GitHub account owner
repos = g.get_user(repo_owner).get_repos()

# Iterate through the repositories and call the function to remove old branches for each
for repo in repos:
    remove_old_branches(repo)
